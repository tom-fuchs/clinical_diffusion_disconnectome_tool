# Files:
# t1.nii.gz
# dti.nii.gz
# dti.dcmdir.tgz


# brain-in-rawavg.nii.gz (from T1w/EX..../mri using 
#    mri_vol2vol --mov brain.mgz --targ rawavg.mgz \
#        --regheader --o brain-in-rawavg.mgz --no-save-reg
#   and mri_convert brain-in-rawavg.mgz brain-in-rawavg.nii.gz
# acpc_inv.mat (from T1w/xfms)
#   convert_xfm -omat acpc_inv.mat -inverse acpc.mat 
#
# flirt -in brain-in-rawavg.nii.gz -ref t1.nii.gz -applyxfm \
#    -init acpc_inv.mat -out brain_reg.nii.gz
#
# Optional files:
# t1hires_brain_mask_manual.nii.gz



all: dti_FA.nii.gz dti_FA_to_MNI.nii.gz 

dti1.bvecs: dti1.dcmdir.tgz
	mkdir -p tmp
	cd tmp && tar zxvf ../dti1.dcmdir.tgz && dcm2nii *
	cd tmp/* && mv `find .| grep bvec` ../../dti1.bvecs 	
	cd tmp/* && mv `find .| grep bval` ../../dti1.bvals  
	rm -rf tmp

dti2.bvecs: dti2.dcmdir.tgz
	mkdir -p tmp
	cd tmp && tar zxvf ../dti2.dcmdir.tgz && dcm2nii *
	cd tmp/* && mv `find .| grep bvec` ../../dti2.bvecs 	
	cd tmp/* && mv `find .| grep bval` ../../dti2.bvals  
	rm -rf tmp
    
# Also makes dti.bvals
dti.bvecs: dti1.bvecs dti2.bvecs 
	paste -d" " dti2.bvals dti1.bvals > dti.bvals
	paste -d" " dti2.bvecs dti1.bvecs > dti.bvecs;\
    

# Also makes dti_brain.nii.gz
dti_brain_mask.nii.gz: dti_prelim_b0.nii.gz
	bet dti_prelim_b0.nii.gz dti_brain -m -f 0.2


dti.nii.gz: dti1.nii.gz dti2.nii.gz 
	fslmerge -t dti.nii.gz dti1.nii.gz dti2.nii.gz

    
dti.acqp: dti.dimension
	if grep "25_21" dti.dimension; then echo "0 -1 0 0.0931\n0 -1 0 0.0931" >> dti.acqp;\
	fi
	if grep "52" dti.dimension; then echo "-1 0 0 0.0867" >> dti.acqp;\
	fi
	if grep "60" dti.dimension; then echo "0 -1 0 0.0931" >> dti.acqp;\
	fi
	if grep "16" dti.dimension; then echo "1 0 0 0.05" >> dti.acqp;\
	fi
	if grep "40" dti.dimension; then echo "0 1 0 0.0904" >> dti.acqp;\
	fi
	if grep "26" dti.dimension; then echo "0 1 0 0.0863" >> dti.acqp;\
	fi
	if grep "12" dti.dimension; then echo "0 1 0 0.0888" >> dti.acqp;\
	fi

dti.dimension: dti.nii.gz
	echo "25_21" >> dti.dimension

dti.index: dti.dimension
	if grep "25_21" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2" >> dti.index;\
	fi
	if grep "52" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "60" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "16" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "40" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "12" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "26" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
    

dti_eddy.nii.gz: dti.nii.gz dti.acqp dti_brain_mask.nii.gz  \
	dti.index dti.bvecs
	eddy --imain=dti.nii.gz --mask=dti_brain_mask.nii.gz --index=dti.index \
	--acqp=dti.acqp --bvecs=dti.bvecs --bvals=dti.bvals --out=dti_eddy


dti_FA.nii.gz: dti_eddy.nii.gz dti_brain_mask.nii.gz dti.bvecs dti.bvals
	dtifit -k dti_eddy.nii.gz -o dti -m dti_brain_mask.nii.gz -r dti.bvecs -b dti.bvals

	
dti_b0.nii.gz: dti_eddy.nii.gz
	fslroi dti_eddy.nii.gz dti_b0.nii.gz 0 1

dti_prelim_b0.nii.gz: dti.nii.gz
	fslroi dti.nii.gz dti_prelim_b0.nii.gz 0 1


#ti_posteddy_b0.nii.gz: dti_eddy.nii.gz
#	fslroi dti_eddy.nii.gz dti_posteddy_b0.nii.gz 0 1

#dti_brain_posteddy_mask.nii.gz: dti_posteddy_b0.nii.gz
#	bet dti_posteddy_b0.nii.gz dti_posteddy_brain -m -f 0.2


t1_corrected.nii.gz: t1.nii.gz
	N4BiasFieldCorrection \
	-d 3 \
	-i t1.nii.gz \
	-o t1_corrected.nii.gz 

t1_corrected2.nii.gz: t1_corrected.nii.gz
	N4BiasFieldCorrection \
	-d 3 \
	-i t1_corrected.nii.gz \
	-o t1_corrected2.nii.gz 


t1hires_brain.nii.gz: t1_corrected2.nii.gz brain_reg.nii.gz
	fslmaths t1_corrected2.nii.gz -mas brain_reg.nii.gz t1hires_brain.nii.gz

dtibrain_to_t1hiresbrain1Warp.nii.gz: t1hires_brain.nii.gz dti_brain.nii.gz
	antsRegistration \
--dimensionality 3 \
--float 0 \
--output [dtibrain_to_t1hiresbrain,dtibrain_to_t1hiresbrainWarped.nii.gz] \
--interpolation Linear \
--winsorize-image-intensities [0.005,0.995] \
--use-histogram-matching 0 \
--initial-moving-transform [t1hires_brain.nii.gz,dti_brain.nii.gz,1] \
--transform Rigid[0.1] \
--metric MI[t1hires_brain.nii.gz,dti_brain.nii.gz,1,32,Regular,0.25] \
--convergence [1000x500x250x100,1e-6,10] \
--shrink-factors 8x4x2x1 \
--smoothing-sigmas 3x2x1x0vox \
--transform Affine[0.1] \
--metric MI[t1hires_brain.nii.gz,dti_brain.nii.gz,1,32,Regular,0.25] \
--convergence [1000x500x250x100,1e-6,10] \
--shrink-factors 8x4x2x1 \
--smoothing-sigmas 3x2x1x0vox \
--transform SyN[0.1,3,0] \
--metric MI[t1hires_brain.nii.gz,dti_brain.nii.gz,1,32,Regular,0.25] \
--convergence [100x70x50x5,1e-6,10] \
--shrink-factors 8x4x2x1 \
--smoothing-sigmas 3x2x1x0vox



#dtibrain_to_t1hiresbrain1Warp.nii.gz: t1hires_brain.nii.gz dti_brain.nii.gz
#	antsRegistrationSyN.sh \
	-d 3 \
	-f t1hires_brain.nii.gz \
	-m dti_posteddy_brain.nii.gz \
	-o dtibrain_to_t1hiresbrain \
	-n 32
	
dti_FA_to_MNI.nii.gz: dtibrain_to_t1hiresbrain1Warp.nii.gz T1toMNI1Warp.nii.gz \
	dti_FA.nii.gz T1toMNI0GenericAffine.mat dtibrain_to_t1hiresbrain0GenericAffine.mat 
	antsApplyTransforms \
    -d 3 \
	-i dti_FA.nii.gz \
	-r FSL_MNI152_FreeSurferConformed_1mm_head.nii.gz \
	-o dti_FA_to_MNI.nii.gz \
	-t T1toMNI1Warp.nii.gz \
	-t T1toMNI0GenericAffine.mat \
	-t dtibrain_to_t1hiresbrain1Warp.nii.gz \
	-t dtibrain_to_t1hiresbrain0GenericAffine.mat 
#Doesn't work, nonessential, for sanity check
#dti_V1_to_MNI.nii.gz: dtibrain_to_t1hiresbrain1Warp.nii.gz T1toMNI1Warp.nii.gz \
	dti_V1.nii.gz T1toMNI0GenericAffine.mat dtibrain_to_t1hiresbrain0GenericAffine.mat
#	antsApplyTransforms \
	-d 3 \
	-i dti_V1.nii.gz \
	-r FSL_MNI152_FreeSurferConformed_1mm_head.nii.gz \
	-o dti_V1_to_MNI.nii.gz \
	-t T1toMNI1Warp.nii.gz \
	-t T1toMNI0GenericAffine.mat \
	-t dtibrain_to_t1hiresbrain1Warp.nii.gz \
	-t dtibrain_to_t1hiresbrain0GenericAffine.mat 


dti_FA_to_t1hires.nii.gz: dtibrain_to_t1hiresbrain1Warp.nii.gz dti_FA.nii.gz t1hires_brain.nii.gz
	antsApplyTransforms \
	-d 3 \
	-i dti_FA.nii.gz \
	-r t1hires_brain.nii.gz \
	-o dti_FA_to_t1hires.nii.gz \
	-t dtibrain_to_t1hiresbrain1Warp.nii.gz \
	-t dtibrain_to_t1hiresbrain0GenericAffine.mat \
	-v 0 \
	-n Linear

#ifeq ($(wildcard t1hires_brain_mask_manual.nii.gz),t1hires_brain_mask_manual.nii.gz) 
#t1hires_brain_mask.nii.gz: t1hires.nii.gz t1hires_brain_mask_manual.nii.gz
#	ln -s t1hires_brain_mask_manual.nii.gz t1hires_brain_mask.nii.gz
#	fslmaths t1hires.nii.gz -mas t1hires_brain_mask.nii.gz t1hires_brain.nii.gz
#else
#t1hires_brain_mask.nii.gz: t1.nii.gz
#	bet t1.nii.gz t1hires_brain -m 
#endif 
 