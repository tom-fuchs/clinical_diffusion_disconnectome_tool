# Files:
# t1_inp.nii.gz
# t1.nii.gz
# dti.nii.gz
# dti.dcmdir.tgz


all: dti_FA_to_MNI.nii.gz 


MNI_brain.nii.gz:
	cp /shared/studies/nonregulated/connectome/NeMo/mni/MNI152_T1_1mm_brain.nii.gz ./MNI_brain.nii.gz	


FSL_MNI152_FreeSurferConformed_1mm_head.nii.gz:
	cp /shared/studies/nonregulated/connectome/NeMo/mni/FSL_MNI152_FreeSurferConformed_1mm_head.nii.gz .       

#ifeq ("$(wildcard $(PATH_TO_FILE))","")
#FILE_EXISTS = 1
#do stuff
#endif

####to copy over subjects 
# /shared/studies/nonregulated/connectome/dti_fa/full_ceg_processing/subjects/EX28249 EX28249

# Also makes dti.bvals
dti.bvecs: dti.dcmdir.tgz
	mkdir -p tmp
	cd tmp && tar zxvf ../dti.dcmdir.tgz && dcm2nii *
	cd tmp/* && mv `find .| grep bvec` ../../dti.bvecs 	
	cd tmp/* && mv `find .| grep bval` ../../dti.bvals  
	rm -rf tmp

#endif


# Also makes dti_brain_mask.nii.gz
dti_brain.nii.gz: dti_prelim_b0.nii.gz
	bet dti_prelim_b0.nii.gz dti_brain -m -f 0.2

########## to make t1_brain_masked.nii.gz #########################

t1_bet.nii.gz: t1.nii.gz
	bet t1.nii.gz t1_bet -m


t1mniWarped.nii.gz: t1_bet.nii.gz MNI_brain.nii.gz
	antsRegistration \
	--dimensionality 3 \
	--float 0 \
	--output [t1mni,t1mni1Warp.nii.gz,t1mniWarped.nii.gz,t1mni0GenericAffine.mat] \
	--interpolation Linear \
	--winsorize-image-intensities [0.005,0.995] \
	--use-histogram-matching 0 \
	--initial-moving-transform [MNI_brain.nii.gz,t1_bet.nii.gz,1] \
	--transform Affine[0.1] \
	--metric MI[MNI_brain.nii.gz,t1_bet.nii.gz,1,32,Regular,0.25] \
	--convergence [1000x500x250x100,1e-6,10] \
	--shrink-factors 8x4x2x1 \
	--smoothing-sigmas 3x2x1x0vox

mni_mask.nii.gz: t1mniWarped.nii.gz
	fslmaths t1mniWarped.nii.gz -bin mni_mask.nii.gz


t1_brain_masked.nii.gz: t1.nii.gz mni_mask.nii.gz
	fslmaths t1.nii.gz -mas mni_mask.nii.gz t1_brain_masked.nii.gz

####################################################

t1_inp_n4_1.nii.gz: t1_inp.nii.gz
	N4BiasFieldCorrection \
	-d 3 \
	-i @< \
	-o @$
    
t1_inp__n4_2.nii.gz: t1_inp_n4_1.nii.gz
	N4BiasFieldCorrection \
	-d 3 \
	-i @< \
	-o @$


T1toMNI1Warp.nii.gz: t1_inp__n4_2.nii.gz FSL_MNI152_FreeSurferConformed_1mm_head.nii.gz 
	antsRegistrationSyN.sh \
	-d 3 \
	-f FSL_MNI152_FreeSurferConformed_1mm_head.nii.gz \
	-m t1_inp__n4_2.nii.gz \
	-o T1toMNI \
	-n 1

dti.dimension: dti.nii.gz
	fslval dti.nii.gz dim4 >> dti.dimension


dti.acqp: dti.dimension
	if grep "52" dti.dimension; then echo "-1 0 0 0.0867" >> dti.acqp;\
	fi
	if grep "60" dti.dimension; then echo "0 -1 0 0.0931" >> dti.acqp;\
	fi
	if grep "16" dti.dimension; then echo "1 0 0 0.05" >> dti.acqp;\
	fi
	if grep "40" dti.dimension; then echo "0 1 0 0.0904" >> dti.acqp;\
	fi
	if grep "26" dti.dimension; then echo "0 1 0 0.0863" >> dti.acqp;\
	fi
	if grep "12" dti.dimension; then echo "0 1 0 0.0888" >> dti.acqp;\
	fi
	if grep "28" dti.dimension; then echo "0 1 0 0.0931" >> dti.acqp;\
        fi

dti.index: dti.dimension
	if grep "52" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "60" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "16" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "40" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "12" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "26" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi
	if grep "28" dti.dimension; then echo "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" >> dti.index;\
	fi



############ eddy steps sometimes commented out because they are slow #####################

dti_eddy.nii.gz: dti.nii.gz dti_brain_mask.nii.gz dti.acqp \
	dti.index dti.bvecs dti.bvals
	eddy --imain=dti.nii.gz --mask=dti_brain_mask.nii.gz --index=dti.index \
	--acqp=dti.acqp --bvecs=dti.bvecs --bvals=dti.bvals --out=dti_eddy

##################################

#####################Inpainting##########################
flair_reorient_robust.nii.gz: t2flair.nii.gz
	flirt -in t2flair.nii.gz -ref t2flair.nii.gz -applyisoxfm 1.0 -out flair_iso.nii.gz
	fslreorient2std flair_iso.nii.gz flair_reorient.nii.gz
	robustfov -i flair_reorient.nii.gz -r flair_reorient_robust.nii.gz

t1_reorient_robust.nii.gz: t1.nii.gz
	fslreorient2std t1.nii.gz t1_reorient.nii.gz
	robustfov -i t1_reorient.nii.gz -r t1_reorient_robust.nii.gz

t1_reorient_robust_n4.nii.gz: t1_reorient_robust.nii.gz
	N4BiasFieldCorrection \
	-d 3 \
	-i t1_reorient_robust.nii.gz \
	-o t1_reorient_robust_n4.nii.gz 

flair_reorient_robust_n4.nii.gz: flair_reorient_robust.nii.gz
	N4BiasFieldCorrection \
	-d 3 \
	-i flair_reorient_robust.nii.gz \
	-o flair_reorient_robust_n4.nii.gz 

#register T2FLAIR to t1
flair_to_t1.mat: flair_reorient_robust_n4.nii.gz t1_reorient_robust_n4.nii.gz
	flirt -in flair_reorient_robust_n4.nii.gz -ref t1_reorient_robust_n4.nii.gz -dof 6 \
	-out flair_to_t1.nii.gz -omat flair_to_t1.mat

#apply reg, to get lesions mask into T1 space
lesion_mask_t1.nii.gz: t1_reorient_robust_n4.nii.gz lesion_mask.nii.gz flair_to_t1.mat
	flirt -in lesion_mask.nii.gz -ref t1_reorient_robust_n4.nii.gz \
	-applyxfm -init flair_to_t1.mat -interp nearestneighbour \
	-out lesion_mask_t1.nii.gz

#brain extract T1
t1_reorient_robust_n4_brain_mask.nii.gz: t1_reorient_robust_n4.nii.gz
	bet t1_reorient_robust_n4.nii.gz t1_reorient_robust_n4_brain -B -f 0.3 -s -m

#lesion inpainting block
t1_inp.nii.gz: t1_reorient_robust_n4.nii.gz lesion_mask_t1.nii.gz \
	t1_reorient_robust_n4_brain_mask.nii.gz
	fslmaths lesion_mask_t1.nii.gz -binv lesion_mask_t1_inv.nii.gz
	fslmaths t1_reorient_robust_n4_brain.nii.gz.nii.gz -mas lesion_mask_t1_inv.nii.gz nabt.nii.gz
	fast -o nabtseg -g -N nabt.nii.gz
	lesion_filling -i t1_reorient_robust_n4.nii.gz \
	-o t1_inp.nii.gz \
	-l lesion_mask_t1.nii.gz \
	-w nabtseg_seg_2.nii.gz
	rm nabt.nii.gz nabtseg_seg_0.nii.gz \
	nabtseg_seg_1.nii.gz nabtseg_seg_2.nii.gz \
	lesion_mask_t1_inv.nii.gz

######################################
dti_FA.nii.gz: dti_eddy.nii.gz dti_brain_mask.nii.gz dti.bvecs dti.bvals
	dtifit -k dti_eddy.nii.gz -o dti -m dti_brain_mask.nii.gz -r dti.bvecs -b dti.bvals

dti_b0.nii.gz: dti_eddy.nii.gz
	fslroi dti_eddy.nii.gz dti_b0.nii.gz 0 1

dti_prelim_b0.nii.gz: dti.nii.gz
	fslroi dti.nii.gz dti_prelim_b0.nii.gz 0 1


t1_n4_1.nii.gz: t1.nii.gz
	N4BiasFieldCorrection \
	-d 3 \
	-i @< \
	-o @$

t1_n4_2.nii.gz: t1_n4_1.nii.gz
	N4BiasFieldCorrection \
	-d 3 \
	-i @< \
	-o @$

t1_brain.nii.gz: t1_n4_2.nii.gz t1_brain_masked.nii.gz
	fslmaths t1_n4_2.nii.gz -mas t1_brain_masked.nii.gz t1_brain.nii.gz

dtibrain_to_t1brain1Warp.nii.gz: t1_brain.nii.gz dti_brain.nii.gz
	antsRegistration \
--dimensionality 3 \
--float 0 \
--output [dtibrain_to_t1brain,dtibrain_to_t1brainWarped.nii.gz] \
--interpolation Linear \
--winsorize-image-intensities [0.005,0.995] \
--use-histogram-matching 0 \
--initial-moving-transform [t1_brain.nii.gz,dti_brain.nii.gz,1] \
--transform Rigid[0.1] \
--metric MI[t1_brain.nii.gz,dti_brain.nii.gz,1,32,Regular,0.25] \
--convergence [1000x500x250x100,1e-6,10] \
--shrink-factors 8x4x2x1 \
--smoothing-sigmas 3x2x1x0vox \
--transform Affine[0.1] \
--metric MI[t1_brain.nii.gz,dti_brain.nii.gz,1,32,Regular,0.25] \
--convergence [1000x500x250x100,1e-6,10] \
--shrink-factors 8x4x2x1 \
--smoothing-sigmas 3x2x1x0vox \
--transform SyN[0.1,3,0] \
--metric MI[t1_brain.nii.gz,dti_brain.nii.gz,1,4] \
--convergence [100x70x50x5,1e-6,10] --shrink-factors 8x4x2x1 \
--smoothing-sigmas 3x2x1x0vox 



dti_FA_to_MNI.nii.gz: T1toMNI1Warp.nii.gz dtibrain_to_t1brain1Warp.nii.gz T1toMNI1Warp.nii.gz \
	dti_FA.nii.gz T1toMNI0GenericAt1.nii.ffine.mat dtibrain_to_t1brain0GenericAffine.mat 
	antsApplyTransforms \
	-d 3 \
	-i dti_FA.nii.gz \
	-r FSL_MNI152_FreeSurferConformed_1mm_head.nii.gz \
	-o dti_FA_to_MNI.nii.gz \
	-t T1toMNI1Warp.nii.gz \
	-t T1toMNI0GenericAffine.mat \
	-t dtibrain_to_t1brain1Warp.nii.gz \
	-t dtibrain_to_t1brain0GenericAffine.mat 

dti_FA_to_t1.nii.gz: dtibrain_to_t1brain1Warp.nii.gz dti_FA.nii.gz t1_brain.nii.gz
	antsApplyTransforms \
	-d 3 \
	-i dti_FA.nii.gz \
	-r t1_brain.nii.gz \
	-o dti_FA_to_t1.nii.gz \
	-t dtibrain_to_t1brain1Warp.nii.gz \
	-t dtibrain_to_t1brain0GenericAffine.mat \
	-v 0 \
	-n Linear




